{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rogee\\\\Downloads\\\\teste\\\\src\\\\views\\\\home\\\\Home.js\";\nimport React from \"react\";\nimport { Box, Grid, Button, Card, TextField, CardContent\n/* Importando componentes do material UI */\n, FormControl, Typography, Select, MenuItem, InputLabel } from \"@material-ui/core/\";\nimport Header from \"../../components/Header\";\n/* Importando componente de Card */\n\nimport CardWish from \"../../components/CardWish\";\n/* Importando componente de Card */\n\nimport '../../layouts/layout.css';\n/* Importando CSS */\n\nimport AddIcon from '@material-ui/icons/Add';\n/* Importando icone */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        filter: {\n          id: \"filter\",\n          value: \"\"\n        },\n        nome: {\n          id: \"nome\",\n          value: \"\"\n        },\n        preco: {\n          id: \"preco\",\n\n          /* Criando os atributos que serão utilizados */\n          value: \"\"\n        },\n        imagem: {\n          id: \"imagem\",\n          value: \"\"\n        },\n        prioridade: {\n          id: \"prioridade\",\n          value: \"\"\n        },\n        data: {\n          id: \"data\",\n          value: \"\"\n        }\n      },\n      filter: {\n        id: \"preco\",\n        value: \"\"\n      },\n      typePage: \"list\",\n\n      /* Atributo para identificar qual página será visualizada */\n      idxEdit: \"\"\n      /* Atributo para identificar a posição do item */\n\n    };\n  }\n\n  onInputChange(id, value) {\n    let {\n      form\n    } = this.state;\n    /* Função responsável para atribuir valor do input a variavel */\n\n    form[id].value = value;\n    this.setState({\n      form\n    });\n  }\n\n  changeView() {\n    let {\n      typePage\n    } = this.state;\n    let newType = typePage == \"list\" ? \"create\" : \"list\";\n    /* Função para mudar o atributo que de terminar qual tela será visualizada */\n\n    this.clearForm();\n    this.setState({\n      typePage: newType\n    });\n  }\n\n  createItem() {\n    let {\n      form\n    } = this.state;\n    let body = {\n      nome: form.nome.value,\n      preco: form.preco.value,\n      imagem: form.imagem.value,\n\n      /* Criando um objeto com as informações inseridas */\n      prioridade: form.prioridade.value,\n      data: form.data.value\n    };\n    let localStore = localStorage.getItem(\"database\");\n    /* Buscando o local storage */\n\n    if (localStore) {\n      /* Caso ja exista itens no local storage */\n      const cache = JSON.parse(localStore);\n      cache.push(body);\n      /* Adicionando o novo item */\n\n      localStorage.setItem(\"database\", JSON.stringify(cache));\n      /* Atualizando o local storage*/\n\n      this.clearForm();\n      /* Limpando o formulario */\n\n      this.setState({\n        typePage: \"list\"\n      });\n      /* Mudando de tela */\n    } else {\n      /* Caso não exista itens no local storage */\n      let database = [];\n      database[0] = body;\n      localStorage.setItem(\"database\", JSON.stringify(database));\n      /* Atualizando o local storage*/\n    }\n  }\n\n  clearForm() {\n    let {\n      form\n    } = this.state;\n    form.imagem.value = \"\";\n    form.preco.value = \"\";\n    /* Limpar os inputs */\n\n    form.nome.value = \"\";\n    form.data.value = \"\";\n    form.prioridade.value = \"\";\n    this.setState({\n      form\n    });\n  }\n\n  removeItem(l, idx) {\n    let localStore = localStorage.getItem(\"database\");\n    /* Busco o local storage */\n\n    const cache = JSON.parse(localStore);\n    cache.splice(idx, 1);\n    /* Retirando o iten do local storage */\n\n    localStorage.setItem(\"database\", JSON.stringify(cache));\n    /* Atualizando local storage */\n\n    this.setState({\n      typePage: \"list\"\n    });\n    /* Mudando de tela */\n  }\n\n  editarItem(l, idx) {\n    let {\n      typePage,\n      form\n    } = this.state;\n    typePage = \"edit\";\n    form.imagem.value = l.imagem;\n    form.nome.value = l.nome;\n    /* Preenchendo o input com as informações do card clicado */\n\n    form.preco.value = l.preco;\n    form.data.value = l.data;\n    form.prioridade.value = l.prioridade;\n    this.setState({\n      typePage,\n      form,\n      idxEdit: idx\n    });\n  }\n\n  editView() {\n    let {\n      form,\n      idxEdit\n    } = this.state;\n    let localStore = localStorage.getItem(\"database\");\n    /*  Buscando o local storage */\n\n    const cache = JSON.parse(localStore);\n    cache[idxEdit].imagem = form.imagem.value;\n    cache[idxEdit].nome = form.nome.value;\n    /* Atribuindo os novos valores */\n\n    cache[idxEdit].preco = form.preco.value;\n    cache[idxEdit].prioridade = form.prioridade.value;\n    cache[idxEdit].data = form.data.value;\n    localStorage.setItem(\"database\", JSON.stringify(cache));\n    /* Atualizando local storage */\n\n    this.setState({\n      typePage: \"list\"\n    });\n    /* Mudando de tela */\n\n    this.clearForm();\n  }\n\n  render() {\n    let {\n      form,\n      typePage\n    } = this.state;\n    let lista = localStorage.getItem('database');\n    /*  Buscando o local storage */\n\n    let cacheLista = JSON.parse(lista);\n    let listaFiltrada = cacheLista === null || cacheLista === void 0 ? void 0 : cacheLista.filter(l => {\n      var _form$filter, _form$filter$value;\n\n      const filter = form === null || form === void 0 ? void 0 : (_form$filter = form.filter) === null || _form$filter === void 0 ? void 0 : (_form$filter$value = _form$filter.value) === null || _form$filter$value === void 0 ? void 0 : _form$filter$value.toLowerCase();\n      const nome = l.nome.toLowerCase();\n      return nome.includes(filter);\n    });\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mt-4 h-100\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"LIST NOW\"\n        /* Componente de cabeçalho */\n        ,\n        qtdWishes: cacheLista === null || cacheLista === void 0 ? void 0 : cacheLista.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), typePage == \"list\" ?\n      /*#__PURE__*/\n\n      /* Condição para ser mostrado a tela de listagem */\n      _jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 10,\n              sm: 10,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: \"w-100\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  label: \"Filtrar desejo\",\n                  id: this.state.form.filter.id\n                  /* Input para filtrar item */\n                  ,\n                  value: this.state.form.filter.value,\n                  onChange: e => this.onInputChange(this.state.form.filter.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 2,\n              sm: 2,\n              xs: 2,\n              className: \"gridButtonFilter\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"newWishButton primary\"\n                /* Botão para redirecionar para página de criar item */\n                ,\n                onClick: () => this.changeView(),\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), listaFiltrada === null || listaFiltrada === void 0 ? void 0 : listaFiltrada.map((wish, idx) => {\n            /* Renderizando a lista de itens */\n            return /*#__PURE__*/_jsxDEV(CardWish, {\n              /* Componente de card */\n              wish: wish,\n              idx: idx,\n              editar: this.editarItem.bind(this),\n              remove: this.removeItem.bind(this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: \"mt-2 center\",\n          children: typePage == \"edit\" ? \"Editar desejo\" : \"Criar desejo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"mt-1 p-3\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"w-100 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              size: \"small\",\n              label: \"Nome\",\n              id: this.state.form.nome.id,\n              value: this.state.form.nome.value,\n              style: {\n                width: \"100%\"\n              },\n              onChange: e => this.onInputChange(this.state.form.nome.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"w-100 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Prioridade*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: this.state.form.prioridade.id,\n              value: this.state.form.prioridade.value,\n              onChange: e => this.onInputChange(this.state.form.prioridade.id, e.target.value),\n              label: \"Prioridade\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"baixa\",\n                children: \"Baixa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"media\",\n                children: \"M\\xE9dia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"alta\",\n                children: \"Alta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"w-100 mt-2 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              size: \"small\",\n              label: \"Pre\\xE7o\",\n              type: \"number\",\n              id: this.state.form.preco.id,\n              value: this.state.form.preco.value,\n              onChange: e => this.onInputChange(this.state.form.preco.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            className: \"mt-2\",\n            children: \"Data de compra*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            size: \"small\",\n            id: this.state.form.data.id,\n            style: {\n              width: \"100%\"\n            },\n            type: \"date\",\n            value: this.state.form.data.value,\n            onChange: e => this.onInputChange(this.state.form.data.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"w-100 mt-2\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              size: \"small\",\n              label: \"URL da imagem\",\n              id: this.state.form.imagem.id,\n              value: this.state.form.imagem.value,\n              onChange: e => this.onInputChange(this.state.form.imagem.id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            className: \"center\",\n            style: {\n              marginTop: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => this.changeView(),\n              children: \"VOLTAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            sm: 3,\n            xs: 12,\n            className: \"center\",\n            style: {\n              marginTop: \"10px\"\n            },\n            children: typePage == \"edit\" ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.editView(),\n              children: \"EDITAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.createItem(),\n              children: \"CRIAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/rogee/Downloads/teste/src/views/home/Home.js"],"names":["React","Box","Grid","Button","Card","TextField","CardContent","FormControl","Typography","Select","MenuItem","InputLabel","Header","CardWish","AddIcon","Home","Component","constructor","props","state","form","filter","id","value","nome","preco","imagem","prioridade","data","typePage","idxEdit","onInputChange","setState","changeView","newType","clearForm","createItem","body","localStore","localStorage","getItem","cache","JSON","parse","push","setItem","stringify","database","removeItem","l","idx","splice","editarItem","editView","render","lista","cacheLista","listaFiltrada","toLowerCase","includes","length","e","target","color","map","wish","bind","width","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Box, Grid,\n    Button, Card,\n    TextField, CardContent,                                                 /* Importando componentes do material UI */\n    FormControl, Typography,\n    Select, MenuItem, InputLabel,\n} from \"@material-ui/core/\";\nimport Header from \"../../components/Header\";                               /* Importando componente de Card */\nimport CardWish from \"../../components/CardWish\";                           /* Importando componente de Card */\nimport '../../layouts/layout.css';                                          /* Importando CSS */\nimport AddIcon from '@material-ui/icons/Add';                               /* Importando icone */\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            form: {\n                filter: {\n                    id: \"filter\",\n                    value: \"\"\n                },\n                nome: {\n                    id: \"nome\",\n                    value: \"\"\n                },\n                preco:\n                {\n                    id: \"preco\",                                            /* Criando os atributos que serão utilizados */\n                    value: \"\"\n                },\n                imagem:\n                {\n                    id: \"imagem\",\n                    value: \"\"\n                },\n                prioridade:\n                {\n                    id: \"prioridade\",\n                    value: \"\"\n                },\n                data:\n                {\n                    id: \"data\",\n                    value: \"\"\n                },\n            },\n            filter: {\n                id: \"preco\",\n                value: \"\"\n            },\n            typePage: \"list\",                                   /* Atributo para identificar qual página será visualizada */\n            idxEdit: \"\"                                         /* Atributo para identificar a posição do item */\n        }\n    }\n\n\n\n    onInputChange(id, value) {\n        let { form } = this.state;                                 /* Função responsável para atribuir valor do input a variavel */\n        form[id].value = value;\n        this.setState({ form });\n    }\n\n    changeView() {\n        let { typePage } = this.state\n        let newType = typePage == \"list\" ? \"create\" : \"list\"            /* Função para mudar o atributo que de terminar qual tela será visualizada */\n        this.clearForm()\n        this.setState({ typePage: newType })\n    }\n\n    createItem() {\n        let { form } = this.state\n        let body = {\n            nome: form.nome.value,\n            preco: form.preco.value,\n            imagem: form.imagem.value,                          /* Criando um objeto com as informações inseridas */\n            prioridade: form.prioridade.value,\n            data: form.data.value\n        }\n\n        let localStore = localStorage.getItem(\"database\")                         /* Buscando o local storage */\n\n        if (localStore) {                                                       /* Caso ja exista itens no local storage */\n            const cache = JSON.parse(localStore)\n            cache.push(body)                                                                /* Adicionando o novo item */\n            localStorage.setItem(\"database\", JSON.stringify(cache));                        /* Atualizando o local storage*/\n            this.clearForm()                                                                /* Limpando o formulario */\n            this.setState({ typePage: \"list\" })                                             /* Mudando de tela */\n\n        } else {                                                              /* Caso não exista itens no local storage */\n            let database = [];  \n            database[0] = body\n            localStorage.setItem(\"database\", JSON.stringify(database));       /* Atualizando o local storage*/\n        }\n\n\n    }\n\n    clearForm() {\n        let { form } = this.state\n        form.imagem.value = \"\"\n        form.preco.value = \"\"                                               /* Limpar os inputs */\n        form.nome.value = \"\"\n        form.data.value = \"\"\n        form.prioridade.value = \"\"\n        this.setState({ form })\n    }\n\n    removeItem(l, idx) {\n        let localStore = localStorage.getItem(\"database\")                                   /* Busco o local storage */\n        const cache = JSON.parse(localStore)\n        cache.splice(idx, 1)                                                                /* Retirando o iten do local storage */\n        localStorage.setItem(\"database\", JSON.stringify(cache));                            /* Atualizando local storage */\n        this.setState({ typePage: \"list\" })                                                 /* Mudando de tela */\n    }   \n\n    editarItem(l, idx) {\n        let { typePage, form } = this.state\n        typePage = \"edit\"\n        form.imagem.value = l.imagem\n        form.nome.value = l.nome                                                                /* Preenchendo o input com as informações do card clicado */\n        form.preco.value = l.preco\n        form.data.value = l.data\n        form.prioridade.value = l.prioridade\n        this.setState({ typePage, form, idxEdit: idx })\n    }\n\n    editView() {\n        let { form, idxEdit } = this.state\n        let localStore = localStorage.getItem(\"database\")                               /*  Buscando o local storage */\n        const cache = JSON.parse(localStore)\n\n        cache[idxEdit].imagem = form.imagem.value\n        cache[idxEdit].nome = form.nome.value                                           /* Atribuindo os novos valores */\n        cache[idxEdit].preco = form.preco.value\n        cache[idxEdit].prioridade = form.prioridade.value\n        cache[idxEdit].data = form.data.value\n\n        localStorage.setItem(\"database\", JSON.stringify(cache));                        /* Atualizando local storage */\n\n        this.setState({ typePage: \"list\" })                                             /* Mudando de tela */\n        this.clearForm()\n    }\n\n\n    render() {\n        let { form, typePage } = this.state\n        let lista = localStorage.getItem('database');                            /*  Buscando o local storage */\n        let cacheLista = JSON.parse(lista);\n        let listaFiltrada = cacheLista?.filter((l) => {\n            const filter = form?.filter?.value?.toLowerCase();\n            const nome = l.nome.toLowerCase();\n            return nome.includes(filter);\n        });\n\n        return (\n            <Box className=\"mt-4 h-100\">\n                <Header\n                    title={\"LIST NOW\"}                                      /* Componente de cabeçalho */\n                    qtdWishes={cacheLista?.length}\n                />\n                {typePage == \"list\" ?                       /* Condição para ser mostrado a tela de listagem */\n                    <Card>\n                        <CardContent>\n                            <Grid container md={12} justify=\"center\">\n                                <Grid item md={10} sm={10} xs={10}>\n                                    <FormControl className=\"w-100\">\n                                        <TextField\n                                            size=\"small\"\n                                            label=\"Filtrar desejo\"\n                                            id={this.state.form.filter.id}                                              /* Input para filtrar item */\n                                            value={this.state.form.filter.value}\n                                            onChange={(e) => this.onInputChange(this.state.form.filter.id, e.target.value)}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item md={2} sm={2} xs={2} className=\"gridButtonFilter\">\n                                    <Button\n                                        variant=\"contained\"\n                                        className=\"newWishButton primary\"                                           /* Botão para redirecionar para página de criar item */\n                                        onClick={() => this.changeView()}\n                                    >\n                                        <AddIcon style={{ color: \"white\" }}></AddIcon>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            {listaFiltrada?.map((wish, idx) => {                    /* Renderizando a lista de itens */\n                                return (\n                                    <CardWish\n                                        key={idx}           /* Componente de card */\n                                        wish={wish}\n                                        idx={idx}\n                                        editar={this.editarItem.bind(this)}\n                                        remove={this.removeItem.bind(this)}\n                                    />\n                                )\n                            })}\n                        </CardContent>\n                    </Card>\n                    : <Card>\n                        <Typography variant=\"h6\" className=\"mt-2 center\">{typePage == \"edit\" ? \"Editar desejo\" : \"Criar desejo\"}</Typography>\n                        <Grid container className=\"mt-1 p-3\">\n                            <FormControl className=\"w-100 mt-2\">\n                                <TextField\n                                    required\n                                    size=\"small\"\n                                    label=\"Nome\"\n                                    id={this.state.form.nome.id}\n                                    value={this.state.form.nome.value}\n                                    style={{ width: \"100%\" }}\n                                    onChange={(e) => this.onInputChange(this.state.form.nome.id, e.target.value)}\n                                />\n                            </FormControl>\n                            <FormControl className=\"w-100 mt-2\">\n                                <InputLabel>Prioridade*</InputLabel>\n                                <Select\n                                    id={this.state.form.prioridade.id}\n                                    value={this.state.form.prioridade.value}\n                                    onChange={(e) => this.onInputChange(this.state.form.prioridade.id, e.target.value)}\n                                    label=\"Prioridade\"\n                                >\n                                    <MenuItem value=\"baixa\">Baixa</MenuItem>\n                                    <MenuItem value=\"media\">Média</MenuItem>\n                                    <MenuItem value=\"alta\">Alta</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className=\"w-100 mt-2 mb-2\">\n                                <TextField\n                                    required\n                                    size=\"small\"\n                                    label=\"Preço\"\n                                    type=\"number\"\n                                    id={this.state.form.preco.id}\n                                    value={this.state.form.preco.value}\n                                    onChange={(e) => this.onInputChange(this.state.form.preco.id, e.target.value)}\n                                />\n                            </FormControl>\n                            <InputLabel className=\"mt-2\">Data de compra*</InputLabel>\n                            <TextField\n                                required\n                                size=\"small\"\n                                id={this.state.form.data.id}\n                                style={{ width: \"100%\" }}\n                                type=\"date\"\n                                value={this.state.form.data.value}\n                                onChange={(e) => this.onInputChange(this.state.form.data.id, e.target.value)}\n                            />\n                            <FormControl className=\"w-100 mt-2\">\n                                <TextField\n                                    required\n                                    size=\"small\"\n                                    label=\"URL da imagem\"\n                                    id={this.state.form.imagem.id}\n                                    value={this.state.form.imagem.value}\n                                    onChange={(e) => this.onInputChange(this.state.form.imagem.id, e.target.value)}\n                                />\n                            </FormControl>\n                            <Grid item md={6} sm={6} xs={12} className=\"center\" style={{ marginTop: \"10px\" }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    onClick={() => this.changeView()}\n                                >\n                                    VOLTAR\n                                </Button>\n                            </Grid>\n                            <Grid item md={6} sm={3} xs={12} className=\"center\" style={{ marginTop: \"10px\" }}>\n                                {typePage == \"edit\" ?\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => this.editView()}\n                                    >\n                                        EDITAR\n                                    </Button>\n                                    :\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => this.createItem()}\n                                    >\n                                        CRIAR\n                                </Button>\n                                }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                }\n            </Box>\n        )\n    };\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}