{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rogee\\\\Downloads\\\\teste\\\\src\\\\views\\\\home\\\\Home.js\";\nimport React from \"react\";\nimport { Box, Grid, Button, Card, TextField, CardContent, CardHeader, Typography, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core/\";\nimport Header from \"../../components/Header\";\nimport CardWish from \"../../components/CardWish\";\nimport '../../layouts/layout.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openLoginModal: false,\n      form: {\n        filter: {\n          id: \"filter\",\n          value: \"\"\n        },\n        nome: {\n          id: \"nome\",\n          value: \"\"\n        },\n        preco: {\n          id: \"preco\",\n          value: \"\"\n        },\n        imagem: {\n          id: \"imagem\",\n          value: \"\"\n        },\n        prioridade: {\n          id: \"prioridade\",\n          value: \"\"\n        },\n        data: {\n          id: \"data\",\n          value: \"\"\n        }\n      },\n      filter: {\n        id: \"preco\",\n        value: \"\"\n      },\n      lista: [],\n      typePage: \"list\",\n      idxEdit: \"\"\n    };\n  }\n\n  onInputChange(id, value) {\n    let {\n      form\n    } = this.state;\n    form[id].value = value;\n    this.setState({\n      form\n    });\n  }\n\n  changeView() {\n    let {\n      typePage\n    } = this.state;\n    let newType = typePage == \"list\" ? \"create\" : \"list\";\n    this.clearForm();\n    this.setState({\n      typePage: newType\n    });\n  }\n\n  createItem() {\n    let {\n      form\n    } = this.state;\n    let body = {\n      nome: form.nome.value,\n      preco: form.preco.value,\n      imagem: form.imagem.value,\n      prioridade: form.prioridade.value,\n      data: form.data.value\n    };\n    console.log(body);\n    let localStore = localStorage.getItem(\"database\");\n    let database = [];\n\n    if (localStore) {\n      const cache = JSON.parse(localStore);\n      cache.push(body);\n      localStorage.setItem(\"database\", JSON.stringify(cache));\n      this.clearForm();\n      this.setState({\n        typePage: \"list\"\n      });\n    } else {\n      database[0] = body;\n      localStorage.setItem(\"database\", JSON.stringify(database));\n      console.log(database);\n    }\n  }\n\n  clearForm() {\n    let {\n      form\n    } = this.state;\n    form.imagem.value = \"\";\n    form.preco.value = \"\";\n    form.nome.value = \"\";\n    form.data.value = \"\";\n    form.prioridade.value = \"\";\n    this.setState({\n      form\n    });\n  }\n\n  componentDidMount() {\n    let localStore = localStorage.getItem(\"database\");\n    console.log(localStore);\n  }\n\n  removeItem(l, idx) {\n    console.log(l, idx);\n    let localStore = localStorage.getItem(\"database\");\n    const cache = JSON.parse(localStore);\n    cache.splice(idx, 1);\n    localStorage.setItem(\"database\", JSON.stringify(cache));\n    this.setState({\n      typePage: \"list\"\n    });\n  }\n\n  editarItem(l, idx) {\n    console.log(l, idx);\n    let {\n      typePage,\n      form\n    } = this.state;\n    typePage = \"edit\";\n    form.imagem.value = l.imagem;\n    form.nome.value = l.nome;\n    form.preco.value = l.preco;\n    form.data.value = l.data;\n    form.prioridade.value = l.prioridade;\n    this.setState({\n      typePage,\n      form,\n      idxEdit: idx\n    });\n  }\n\n  editItem() {\n    let {\n      form,\n      idxEdit\n    } = this.state;\n    let localStore = localStorage.getItem(\"database\");\n    const cache = JSON.parse(localStore);\n    console.log(cache[idxEdit]);\n    cache[idxEdit].imagem = form.imagem.value;\n    cache[idxEdit].nome = form.nome.value;\n    cache[idxEdit].preco = form.preco.value;\n    cache[idxEdit].prioridade = form.prioridade.value;\n    cache[idxEdit].data = form.data.value;\n    localStorage.setItem(\"database\", JSON.stringify(cache));\n    this.setState({\n      typePage: \"list\"\n    });\n    this.clearForm();\n  }\n\n  render() {\n    let {\n      form,\n      typePage\n    } = this.state;\n    let lista = localStorage.getItem('database');\n    let cacheLista = JSON.parse(lista);\n    let listaFiltrada = cacheLista === null || cacheLista === void 0 ? void 0 : cacheLista.filter(l => {\n      var _form$filter, _form$filter$value;\n\n      const filter = form === null || form === void 0 ? void 0 : (_form$filter = form.filter) === null || _form$filter === void 0 ? void 0 : (_form$filter$value = _form$filter.value) === null || _form$filter$value === void 0 ? void 0 : _form$filter$value.toLowerCase();\n      const nome = l.nome.toLowerCase();\n      return nome.includes(filter);\n    });\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: \"mt-4 h-100\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"LIST NOW\"\n        /* Componente de cabeçalho */\n        ,\n        qtdWishes: cacheLista === null || cacheLista === void 0 ? void 0 : cacheLista.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), typePage == \"list\" ?\n      /*#__PURE__*/\n\n      /* Condição para ser mostrado a tela de listagem */\n      _jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            md: 12,\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 10,\n              sm: 10,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                className: \"w-100\",\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  size: \"small\",\n                  label: \"Filtrar desejo\",\n                  id: this.state.form.filter.id\n                  /* Input para filtrar item */\n                  ,\n                  value: this.state.form.filter.value,\n                  onChange: e => this.onInputChange(this.state.form.filter.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 2,\n              sm: 2,\n              xs: 2,\n              className: \"gridButtonFilter\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                className: \"newWishButton primary\"\n                /* Botão para redirecionar para página de criar item */\n                ,\n                onClick: () => this.changeView(),\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), listaFiltrada === null || listaFiltrada === void 0 ? void 0 : listaFiltrada.map((wish, idx) => {\n            /* Renderizando a lista de itens */\n            return /*#__PURE__*/_jsxDEV(CardWish, {\n              /* Componente de card */\n              wish: wish,\n              idx: idx,\n              editar: this.editarItem.bind(this),\n              remove: this.removeItem.bind(this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: \"mt-2 center\",\n          children: typePage == \"edit\" ? \"Editar desejo\" : \"Criar desejo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"mt-1 p-3\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            size: \"small\",\n            label: \"Nome\",\n            id: this.state.form.nome.id,\n            value: this.state.form.nome.value,\n            style: {\n              width: \"100%\"\n            },\n            onChange: e => this.onInputChange(this.state.form.nome.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Prioridade*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: this.state.form.prioridade.id,\n              value: this.state.form.prioridade.value,\n              onChange: e => this.onInputChange(this.state.form.prioridade.id, e.target.value),\n              label: \"Prioridade\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"baixa\",\n                children: \"Baixa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"media\",\n                children: \"M\\xE9dia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"alta\",\n                children: \"Alta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            size: \"small\",\n            label: \"Pre\\xE7o\",\n            type: \"number\",\n            id: this.state.form.preco.id,\n            value: this.state.form.preco.value,\n            style: {\n              width: \"100%\"\n            },\n            onChange: e => this.onInputChange(this.state.form.preco.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Data de compra*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            size: \"small\",\n            id: this.state.form.data.id,\n            type: \"date\",\n            value: this.state.form.data.value,\n            style: {\n              width: \"100%\"\n            },\n            onChange: e => this.onInputChange(this.state.form.data.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            size: \"small\",\n            label: \"URL da imagem\",\n            id: this.state.form.imagem.id,\n            value: this.state.form.imagem.value,\n            style: {\n              width: \"100%\"\n            },\n            onChange: e => this.onInputChange(this.state.form.imagem.id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            style: {\n              justifyContent: \"center\",\n              display: \"flex\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"secondary\",\n              disableElevation: true,\n              autoFocus: true,\n              onClick: () => this.changeView(),\n              children: \"VOLTAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 6,\n            style: {\n              justifyContent: \"center\",\n              display: \"flex\",\n              marginTop: \"10px\"\n            },\n            children: typePage == \"edit\" ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.editItem(),\n              children: \"EDITAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => this.createItem(),\n              children: \"CRIAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/rogee/Downloads/teste/src/views/home/Home.js"],"names":["React","Box","Grid","Button","Card","TextField","CardContent","CardHeader","Typography","Select","MenuItem","InputLabel","FormControl","Header","CardWish","AddIcon","Home","Component","constructor","props","state","openLoginModal","form","filter","id","value","nome","preco","imagem","prioridade","data","lista","typePage","idxEdit","onInputChange","setState","changeView","newType","clearForm","createItem","body","console","log","localStore","localStorage","getItem","database","cache","JSON","parse","push","setItem","stringify","componentDidMount","removeItem","l","idx","splice","editarItem","editItem","render","cacheLista","listaFiltrada","toLowerCase","includes","length","e","target","color","map","wish","bind","width","justifyContent","display","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Box, Grid,\n    Button, Card,\n    TextField, CardContent,\n    CardHeader, Typography,\n    Select, MenuItem, InputLabel,\n    FormControl\n} from \"@material-ui/core/\";\nimport Header from \"../../components/Header\";\nimport CardWish from \"../../components/CardWish\";\nimport '../../layouts/layout.css';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            openLoginModal: false,\n            form: {\n                filter: {\n                    id: \"filter\",\n                    value: \"\"\n                },\n                nome: {\n                    id: \"nome\",\n                    value: \"\"\n                },\n                preco:\n                {\n                    id: \"preco\",\n                    value: \"\"\n                },\n                imagem:\n                {\n                    id: \"imagem\",\n                    value: \"\"\n                },\n                prioridade:\n                {\n                    id: \"prioridade\",\n                    value: \"\"\n                },\n                data:\n                {\n                    id: \"data\",\n                    value: \"\"\n                },\n            },\n            filter: {\n                id: \"preco\",\n                value: \"\"\n            },\n            lista: [],\n            typePage: \"list\",\n            idxEdit: \"\"\n        }\n    }\n\n\n\n    onInputChange(id, value) {\n        let { form } = this.state;\n        form[id].value = value;\n        this.setState({ form });\n    }\n\n    changeView() {\n        let { typePage } = this.state\n        let newType = typePage == \"list\" ? \"create\" : \"list\"\n        this.clearForm()\n        this.setState({ typePage: newType })\n    }\n\n    createItem() {\n        let { form } = this.state\n        let body = {\n            nome: form.nome.value,\n            preco: form.preco.value,\n            imagem: form.imagem.value,\n            prioridade: form.prioridade.value,\n            data: form.data.value\n        }\n        console.log(body)\n        let localStore = localStorage.getItem(\"database\")\n        let database = [];\n\n\n\n        if (localStore) {\n            const cache = JSON.parse(localStore)\n            cache.push(body)\n            localStorage.setItem(\"database\", JSON.stringify(cache));\n            this.clearForm()\n            this.setState({ typePage: \"list\" })\n        } else {\n            database[0] = body\n            localStorage.setItem(\"database\", JSON.stringify(database));\n            console.log(database)\n        }\n\n\n    }\n\n    clearForm() {\n        let { form } = this.state\n        form.imagem.value = \"\"\n        form.preco.value = \"\"\n        form.nome.value = \"\"\n        form.data.value = \"\"\n        form.prioridade.value = \"\"\n\n        this.setState({ form })\n    }\n    componentDidMount() {\n        let localStore = localStorage.getItem(\"database\")\n        console.log(localStore)\n    }\n\n    removeItem(l, idx) {\n        console.log(l, idx)\n        let localStore = localStorage.getItem(\"database\")\n        const cache = JSON.parse(localStore)\n        cache.splice(idx, 1)\n        localStorage.setItem(\"database\", JSON.stringify(cache));\n        this.setState({ typePage: \"list\" })\n    }\n\n    editarItem(l, idx) {\n        console.log(l, idx)\n        let { typePage, form } = this.state\n        typePage = \"edit\"\n        form.imagem.value = l.imagem\n        form.nome.value = l.nome\n        form.preco.value = l.preco\n        form.data.value = l.data\n        form.prioridade.value = l.prioridade\n\n        this.setState({ typePage, form, idxEdit: idx })\n    }\n\n\n    editItem() {\n        let { form, idxEdit } = this.state\n\n        let localStore = localStorage.getItem(\"database\")\n        const cache = JSON.parse(localStore)\n        console.log(cache[idxEdit])\n        cache[idxEdit].imagem = form.imagem.value\n        cache[idxEdit].nome = form.nome.value\n        cache[idxEdit].preco = form.preco.value\n        cache[idxEdit].prioridade = form.prioridade.value\n        cache[idxEdit].data = form.data.value\n\n        localStorage.setItem(\"database\", JSON.stringify(cache));\n\n        this.setState({ typePage: \"list\" })\n        this.clearForm()\n    }\n\n\n    render() {\n        let { form, typePage } = this.state\n        let lista = localStorage.getItem('database');\n        let cacheLista = JSON.parse(lista);\n        let listaFiltrada = cacheLista?.filter((l) => {\n            const filter = form?.filter?.value?.toLowerCase();\n            const nome = l.nome.toLowerCase();\n            return nome.includes(filter);\n        });\n\n        return (\n            <Box className=\"mt-4 h-100\">\n                <Header\n                    title={\"LIST NOW\"}                                      /* Componente de cabeçalho */\n                    qtdWishes={cacheLista?.length}\n                />\n                {typePage == \"list\" ?                       /* Condição para ser mostrado a tela de listagem */\n                    <Card>\n                        <CardContent>\n                            <Grid container md={12} justify=\"center\">\n                                <Grid item md={10} sm={10} xs={10}>\n                                    <FormControl className=\"w-100\">\n                                        <TextField\n                                            size=\"small\"\n                                            label=\"Filtrar desejo\"\n                                            id={this.state.form.filter.id}                                              /* Input para filtrar item */\n                                            value={this.state.form.filter.value}\n                                            onChange={(e) => this.onInputChange(this.state.form.filter.id, e.target.value)}\n                                        />\n                                    </FormControl>\n                                </Grid>\n                                <Grid item md={2} sm={2} xs={2} className=\"gridButtonFilter\">\n                                    <Button\n                                        variant=\"contained\"\n                                        className=\"newWishButton primary\"                                           /* Botão para redirecionar para página de criar item */\n                                        onClick={() => this.changeView()}\n                                    >\n                                        <AddIcon style={{ color: \"white\" }}></AddIcon>\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                            {listaFiltrada?.map((wish, idx) => {                    /* Renderizando a lista de itens */\n                                return (\n                                    <CardWish\n                                        key={idx}           /* Componente de card */\n                                        wish={wish}\n                                        idx={idx}\n                                        editar={this.editarItem.bind(this)}\n                                        remove={this.removeItem.bind(this)}\n                                    />\n                                )\n                            })}\n                        </CardContent>\n                    </Card>\n                    : <Card>\n                        <Typography variant=\"h6\" className=\"mt-2 center\">{typePage == \"edit\" ? \"Editar desejo\" : \"Criar desejo\"}</Typography>\n                        <Grid container className=\"mt-1 p-3\">\n                            <TextField\n                                required\n                                size=\"small\"\n                                label=\"Nome\"\n                                id={this.state.form.nome.id}\n                                value={this.state.form.nome.value}\n                                style={{ width: \"100%\" }}\n                                onChange={(e) => this.onInputChange(this.state.form.nome.id, e.target.value)}\n                            />\n                            <FormControl style={{ width: \"100%\" }}>\n                                <InputLabel>Prioridade*</InputLabel>\n                                <Select\n                                    id={this.state.form.prioridade.id}\n                                    value={this.state.form.prioridade.value}\n                                    onChange={(e) => this.onInputChange(this.state.form.prioridade.id, e.target.value)}\n                                    label=\"Prioridade\"\n                                >\n                                    <MenuItem value=\"baixa\">Baixa</MenuItem>\n                                    <MenuItem value=\"media\">Média</MenuItem>\n                                    <MenuItem value=\"alta\">Alta</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <TextField\n                                required\n                                size=\"small\"\n                                label=\"Preço\"\n                                type=\"number\"\n                                id={this.state.form.preco.id}\n                                value={this.state.form.preco.value}\n                                style={{ width: \"100%\" }}\n                                onChange={(e) => this.onInputChange(this.state.form.preco.id, e.target.value)}\n                            />\n                            <InputLabel>Data de compra*</InputLabel>\n                            <TextField\n                                required\n                                size=\"small\"\n                                id={this.state.form.data.id}\n                                type=\"date\"\n                                value={this.state.form.data.value}\n                                style={{ width: \"100%\" }}\n                                onChange={(e) => this.onInputChange(this.state.form.data.id, e.target.value)}\n                            />\n                            <TextField\n                                required\n                                size=\"small\"\n                                label=\"URL da imagem\"\n                                id={this.state.form.imagem.id}\n                                value={this.state.form.imagem.value}\n                                style={{ width: \"100%\" }}\n                                onChange={(e) => this.onInputChange(this.state.form.imagem.id, e.target.value)}\n                            />\n                            <Grid item md={6} style={{ justifyContent: \"center\", display: \"flex\" }}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    disableElevation\n                                    autoFocus\n                                    onClick={() => this.changeView()}\n                                >\n                                    VOLTAR\n                                </Button>\n                            </Grid>\n                            <Grid item md={6} style={{ justifyContent: \"center\", display: \"flex\", marginTop: \"10px\" }}>\n                                {typePage == \"edit\" ?\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => this.editItem()}\n                                    >\n                                        EDITAR\n                                    </Button>\n                                    :\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => this.createItem()}\n                                    >\n                                        CRIAR\n                                </Button>\n                                }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                }\n            </Box>\n        )\n    };\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}